#!/bin/bash

# set -e

# keep track of the last executed command
trap 'last_command=$current_command; current_command=$BASH_COMMAND' DEBUG
# echo an error message before exiting
trap 'echo "\"${last_command}\" command filed with exit code $?."' EXIT

# direct all logs to after-install.log
exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>/home/ubuntu/agilityup-backend-logs/after-install.log 2>&1

AU_DIR="/home/ubuntu/agilityup-backend"
AU_ENV_DIR="/home/ubuntu/agilityup-env"

cd ${AU_DIR}

# changing ownership of folder
sudo /bin/bash -c "chown -R ubuntu:www-data ${AU_DIR}"

# change file permissions to -rw-r--r--
sudo /bin/bash -c "find ${AU_DIR} -type f -exec chmod 644 {} \;"

# change directory permissions to drwxr-xr-x
sudo /bin/bash -c "find ${AU_DIR} -type d -exec chmod 755 {} \;"

# activate virtual env
source ${AU_ENV_DIR}/bin/activate

# install dependencies
${AU_ENV_DIR}/bin/pip install -r ${AU_DIR}/requirements.txt

# run migrations
# ${AU_ENV_DIR}/bin/python ${AU_DIR}/manage.py makemigrations --noinput
# ${AU_ENV_DIR}/bin/python ${AU_DIR}/manage.py migrate --noinput

# collect static content
${AU_ENV_DIR}/bin/python ${AU_DIR}/manage.py collectstatic --noinput

# add cronjobs
 ${AU_ENV_DIR}/bin/python ${AU_DIR}/manage.py crontab add
# ${AU_ENV_DIR}/bin/python ${AU_DIR}/manage.py crontab add --noinput
